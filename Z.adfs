<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
	<sitecore role:require="Standalone or ContentDelivery or ContentManagement">
		<services>
			
		</services>
		<settings>
			<setting name="FederatedAuthentication.Enabled">
				<patch:attribute name="value">true</patch:attribute>
			</setting>
			<setting name="Owin.Authentication.Enabled" value="true" />
			<setting name="Preview.AsAnonymous">
				<patch:attribute name="value">false</patch:attribute>
			</setting>
			<setting name="Preview.AsAnonymous1">
				<patch:attribute name="value">false</patch:attribute>
			</setting>
			<!-- ADFS Application Client Id -->
			<setting name="ClientId" value="xxxxxx" />
			<!-- ADFS OpenID endpoint-->
			<setting name="ADFSDiscoveryDoc" value="https://adfsdomainurl/adfs/.well-known/openid-configuration" />
			<setting name="PostLogoutRedirectURI" value="https://sitecoredomainaname/sitecore/login" />
			<setting name="RedirectURI" value="https://sitecoredomainaname/sitecore/" />
		</settings>
		<pipelines>
			<owin.identityProviders>
				<!-- This is the custom processor that gets executed when ADFS posts the token to Sitecore -->
				<processor type="demo.Components.ADFS.Custom.CustomADFSIdentityProvider, demo.Components.ADFS" resolve="true" />
			</owin.identityProviders>
		</pipelines>
		<federatedAuthentication>
			<identityProviders hint="list:AddIdentityProvider">
				<identityProvider id="ADFS" type="Sitecore.Owin.Authentication.Configuration.DefaultIdentityProvider, Sitecore.Owin.Authentication">
					<param desc="name">$(id)</param>
					<param desc="domainManager" type="Sitecore.Abstractions.BaseDomainManager" resolve="true" />
					<caption>Sign-in</caption>
					<domain>sitecore</domain>
					<!--<icon>/sitecore/shell/themes/standard/Images/24x24/msazure.png</icon>-->
					<transformations hint="list:AddTransformation">
						<!-- you need to have an Idp Claim for this to work -->
						<transformation name="Idp Claim" ref="federatedAuthentication/sharedTransformations/transformation[@name='set idp claim']" />
						<!-- This is to transform AD group into Sitecore Role.  -->
						<transformation name="Transform to Sitecore Author Role" type="Sitecore.Owin.Authentication.Services.DefaultTransformation, Sitecore.Owin.Authentication"> 
							<sources hint="raw:AddSource">
								<claim name="http://schemas.xmlsoap.org/claims/Group" value="SC-Authors" />
							</sources>
							<targets hint="raw:AddTarget">
								<claim name="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" value="sitecore\RoleAuthor" />
							</targets>
							<keepSource>true</keepSource>
						</transformation>
					</transformations>
				</identityProvider>
			</identityProviders>
			<!-- Property initializer assigns claim values to sitecore user properties -->
			<propertyInitializer type="Sitecore.Owin.Authentication.Services.PropertyInitializer, Sitecore.Owin.Authentication">
				<maps hint="list">
					<map name="Email claim"
						 type="Sitecore.Owin.Authentication.Services.DefaultClaimToPropertyMapper, Sitecore.Owin.Authentication" resolve="true" >
						<data hint="raw:AddData">
							<!--claim name-->
							<source name="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress" />
							<!--property name-->
							<target name="Email" />
						</data>
					</map>
					<map name="Department claim"
						 type="Sitecore.Owin.Authentication.Services.DefaultClaimToPropertyMapper, Sitecore.Owin.Authentication" resolve="true" >
						<data hint="raw:AddData">
							<!--claim name-->
							<source name="Description" />
							<!--property name-->
							<target name="TestAdfs" />
						</data>
					</map>
					<map name="Department claim"
						type="Sitecore.Owin.Authentication.Services.DefaultClaimToPropertyMapper, Sitecore.Owin.Authentication" resolve="true" >
						<data hint="raw:AddData">
							<!--claim name-->
							<source name="Address" />
							<!--property name-->
							<target name="Comment" />
						</data>
					</map>
					<map name="Display name claim"
						 type="Sitecore.Owin.Authentication.Services.DefaultClaimToPropertyMapper, Sitecore.Owin.Authentication" resolve="true" >
						<data hint="raw:AddData">
							<!--claim name-->
							<source name="Display name" />
							<!--property name-->
							<target name="FullName" />
						</data>
					</map>
					<map name="Country claim"
						 type="Sitecore.Owin.Authentication.Services.DefaultClaimToPropertyMapper, Sitecore.Owin.Authentication" resolve="true" >
						<data hint="raw:AddData">
							<!--claim name-->
							<source name="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country" />
							<!--property name-->
							<target name="Country" />
						</data>
					</map>
					<map name="admin claim"
						 type="Sitecore.Owin.Authentication.Services.DefaultClaimToPropertyMapper, Sitecore.Owin.Authentication" resolve="true" >
						<data hint="raw:AddData">

							<source name="IsAdministratorMU" />
							<!--property name-->
							<target name="IsAdministrator"/>
						</data>
					</map>
					
				</maps>
			</propertyInitializer>
			<identityProvidersPerSites>
				<mapEntry name="all" type="Sitecore.Owin.Authentication.Collections.IdentityProvidersPerSitesMapEntry, Sitecore.Owin.Authentication" resolve="true">
					<sites hint="list">
						<site>shell</site>
						<site>login</site>
						<site>admin</site>
						<site>service</site>
						<site>modules_shell</site>
						<site>modules_website</site>
						<site>website</site>
						<site>scheduler</site>
						<site>system</site>
						<site>publisher</site>
						<site>xm1basic.cm</site>
					</sites>
					<!-- Registered identity providers for above providers -->
					<identityProviders hint="list:AddIdentityProvider">
						<identityProvider ref="federatedAuthentication/identityProviders/identityProvider[@id='ADFS']" />
					</identityProviders>
					<!-- ExternalUserBuilder is what creates a user with customusername in Sitecore and assigns roles based on claim transformation configured above -->
					
					<externalUserBuilder type="Sitecore.Owin.Authentication.Services.DefaultExternalUserBuilder, Sitecore.Owin.Authentication" resolve="true">
						<!--<param desc="isPersistentUser">true</param>-->
						<IsPersistentUser>true</IsPersistentUser>
					</externalUserBuilder>
				</mapEntry>
			</identityProvidersPerSites>
		</federatedAuthentication>
	</sitecore>
</configuration>
